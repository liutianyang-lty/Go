package main

func main() {

	//接口的基础知识
	//1.interface类型可以定义一组方法，但是这些不需要事先，并且interface
	//  不能包含任何变量。
	//2.基本语法
	//type 接口名 interface {
	//	method1(参数列表) 返回值列表
	//	method2(参数列表) 返回值列表
	//}

	//说明：
	//(1) 接口里的所有方法都没有方法体。接口体现了程序设计的多态和高内聚低耦合的思想
	//(2) Golang中的接口，不需要显示的实现

	//接口的注意事项和细节
	//(1) 接口本身不能创建实例，但是可以指向一个实现了该接口的自定义类型的变量(实例)
	//(2) 接口中所有的方法都没有方法体，即都是没有实现的方法
	//(3) 在Golang中，一个自定义类型需要将接口中的所有方法都实现。
	//(4) 一个自定义类型只有实现了某个接口，才能将该自定义类型的实例赋给接口类型
	//(5) 只有是自定义数据类型，就可以实现接口，不仅仅是结构体类型
	//(6) 一个自定义类型可以实现多个接口
	//(7) Golang接口中不能有任何变量
	//(8) 一个接口(A接口)可以继承多个别的接口(比如B，C接口)，这时如果要是实现A接口，也必须将B,C接口的方法
	//    全部实现
	//(9) interface类型默认是一 个指针(引用类型)，如果没有对interface初始化就使用，那么会输出nil
	//(10) 空接口 interface{} 里没有任何方法，那么所有类型都实现了空接口，即我们可以把任何一个变量赋给空接口
}
